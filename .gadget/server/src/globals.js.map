{"version":3,"sources":["/app/packages/framework/src/globals.ts"],"sourcesContent":["import type { RequestContext } from \"@fastify/request-context\";\nimport { AsyncLocalStorage } from \"async_hooks\";\nimport type { FastifyLoggerInstance } from \"fastify\";\nimport type { AnyActionContext, AnyEffectContext, AnyGlobalActionContext } from \"./types\";\n\nexport const actionContextLocalStorage = new AsyncLocalStorage<AnyActionContext | AnyGlobalActionContext | AnyEffectContext>();\n\nexport const Globals = {\n  /**\n   * Internal variable to store the model validator function, set in `set` by the `AppBridge`.\n   * @internal\n   */\n  modelValidator: null as any as (modelKey: string) => Promise<any>,\n\n  /**\n   * Internal variable to store the request context module, set in `set` by the `AppBridge`.\n   * @internal\n   */\n  requestContext: null as any as RequestContext,\n\n  /**\n   * @internal\n   */\n  logger: null as any as FastifyLoggerInstance,\n\n  /**\n   * This is used internally to set the globals for this instance of the framework package.\n   * @internal\n   */\n  set(globals: { logger: FastifyLoggerInstance; modelValidator: (modelKey: string) => Promise<any>; requestContext: RequestContext }) {\n    Object.assign(this, globals);\n  },\n};\n"],"names":["actionContextLocalStorage","Globals","AsyncLocalStorage","modelValidator","requestContext","logger","set","globals","Object","assign"],"mappings":";;;;;;;;;;;IAKaA,yBAAyB,MAAzBA;IAEAC,OAAO,MAAPA;;;yBANqB;;;;;;AAI3B,MAAMD,4BAA4B,IAAIE,CAAAA,aAAgB,mBAAC;AAEvD,MAAMD,UAAU;IACrB;;;GAGC,GACDE,gBAAgB,IAAI;IAEpB;;;GAGC,GACDC,gBAAgB,IAAI;IAEpB;;GAEC,GACDC,QAAQ,IAAI;IAEZ;;;GAGC,GACDC,KAAIC,OAA8H,EAAE;QAClIC,OAAOC,MAAM,CAAC,IAAI,EAAEF;IACtB;AACF"}